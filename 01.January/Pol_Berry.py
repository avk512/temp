# СПИСКИ (стр.90)
#### Создание литеральных списков (прямо в коде) ####
# Создание пустого списка
# price_lst = []
# # Создание списка с зарнее заданными данными
# temps_lst = [32.0, 212.0, 0.0, 81.6, 100.0, 45.3]
# words_lst = ['hello', 'world']
# # Создание списка с данными различных типов
# car_lst = ['Toyota', 'RAV4', 2.2, 60807]
# # Список списков
# everuthing_lst = [price_lst, temps_lst, words_lst, car_lst]
# odds_and_ends = [[1, 2, 3], ['a', 'b', 'c'], ['One', 'Two', 'Three']]

# Работа со списками (стр.92)
# Проверим, какие есть буквы из заданного слова в списке гласных букв
# vowels = ['a', 'e', 'i', 'o', 'u']
# word = "Milliways"
# for letter in word: # берем каждую букву в слове...
#     if letter in vowels:    # если она содержится в списке гласных...
#         print(letter)   # выводим на экран эту букву

# Модернизируем предыдущий код, чтобы найденная буква отображалась только один раз
# Чтобы вывести только единичные вхождения буквы, нужно запоминать каждую найденную букву
# Заполнение списка во время выполнения кода
# vowels = ['a', 'e', 'i', 'o', 'u']  # начальный список букв
# word = "Milliways"
# found = []  # создаем пустой список для запоминания найденных букв
# # Для заполнения нового списка будем использовать метод append, который добавляет элементы в конец списка Для
# # проверки будем использовать оператор not in, который проверяет отсутствие объекта в коллекции Оператор not in
# # позволит нам добавлять элементы в коллекцию, только когда точно известно, что они не являются частью коллекции
# for letter in word: # для каждой буквы в слове...
#     if letter in vowels:    # если буква есть в списке букв vowels...
#         if letter not in found: # но при этом ее нет в списке found...
#             found.append(letter)    # заносим найденную букву в список found
# for vowel in found: # для каждой буквы в списке найденных букв...
#     print(vowel)    # выводим на экран найденные буквы

# Модернизируем предыдущий код, добавив возможность вводить слово пользователю
# vowels = ['a', 'e', 'i', 'o', 'u']  # начальный список букв
# word = input("Введите какое-нибудь слово на английском для поиска букв: ")
# found = []  # создаем пустой список для найденных букв
# for letter in word:
#     if letter in vowels:
#         if letter not in found:
#             found.append(letter)
# print("Найденные буквы в слове:")
# for vowel in found:
#     print(vowel)

#### Удаление объектов из списка (стр.98) ####
nums = [1, 2, 3, 4, 5, 6]
print(nums)
# метод REMOVE удаляет первое вхождение указанного в аргументе значения из списка. Этот метод удобен, если заранее
# известно значение объекта для удаления.
nums.remove(4)
print(nums)
# но часто требуется удалить элемент по определенному индексу (указанному в аргументе метода). В этом случае
# используется метод POP метод POP удаляет и возвращает удаленный элемент по его индексу. Если метод вызвать без
# аргумента, то будет удален и возвращен последний объект в списке. Если список пуст или вызван несуществующий
# индекс, то будет ошибка.
a = nums.pop()  # сохраняем в переменную удаленный и возвращенный элемент списка (последний в списке)
# nums.pop()
print(nums)
print(a)
b = nums.pop(0)  # сохраняем в переменную удаленный и возвращенный элемент списка (по индексу 0, первый элемент)
print(nums)
print(b)
